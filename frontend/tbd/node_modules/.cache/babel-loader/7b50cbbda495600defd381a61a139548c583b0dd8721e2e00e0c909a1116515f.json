{"ast":null,"code":"var _jsxFileName = \"/Users/mercy/Desktop/IEEE/raiso-ieee-2025/frontend/tbd/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]); //posts is initialized as an empty array and setPosts is a function that will be used to update the state of posts.\n  useEffect(() => {\n    fetch('http://localhost:5000/api/posts').then(response => response.json()) //convert response to json\n    .then(data => setPosts(data)); //set the state of posts to the data that was fetched\n  }, []); //empty array means that this effect will only run once after the component is mounted\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\n;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","fetch","then","response","json","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mercy/Desktop/IEEE/raiso-ieee-2025/frontend/tbd/src/components/Posts.js"],"sourcesContent":["import React, {useEffect, useState } from 'react';\n\nfunction Posts() {\n\n    const [posts, setPosts] = useState([]);//posts is initialized as an empty array and setPosts is a function that will be used to update the state of posts.\n    useEffect(() => {\n        fetch('http://localhost:5000/api/posts')\n        .then(response => response.json())//convert response to json\n        .then(data => setPosts(data));//set the state of posts to the data that was fetched\n    }, []);//empty array means that this effect will only run once after the component is mounted\n\n    return (\n        <div>\n            <h1>Posts</h1>\n            \n        </div>\n    );\n};\n\nexport default Posts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC;EACvCD,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,iCAAiC,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAAA,CACjCF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC,CAAC;;EAEP,oBACIT,OAAA;IAAAU,QAAA,eACIV,OAAA;MAAAU,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEb,CAAC;AAEd;AAACZ,EAAA,CAfQD,KAAK;AAAAc,EAAA,GAALd,KAAK;AAeb;AAED,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}